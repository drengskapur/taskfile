name: Test Taskfiles

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # Test the main Taskfile first
  test-main:
    runs-on: ubuntu-latest
    env:
      SHELL: /bin/bash
      SHELL_RC: ${{ github.workspace }}/.bashrc
      TASK_BIN: /root/.local/bin/task
    steps:
      - uses: actions/checkout@v4

      - name: Install Task
        run: |
          chmod +x ./install.sh
          ./install.sh

      - name: Check Task version
        run: $TASK_BIN --version

      - name: Validate main Taskfile syntax
        run: $TASK_BIN --dry

      - name: List available tasks
        run: $TASK_BIN --list

  # Test individual taskfiles in parallel
  test-taskfiles:
    needs: test-main
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        taskfile:
          - act
          - aws
          - bun
          - digitalocean
          - direnv
          - docker
          - fnm
          - hadolint
          - helm
          - jq
          - k3s
          - mix
          - node
          - pnpm
          - python3
          - rclone
          - terraform
          - uv
    env:
      SHELL: /bin/bash
      SHELL_RC: ${{ github.workspace }}/.bashrc
      TASK_BIN: /root/.local/bin/task
    steps:
      - uses: actions/checkout@v4

      - name: Install Task
        run: |
          chmod +x ./install.sh
          ./install.sh

      - name: Create shell config
        run: touch "$SHELL_RC"

      - name: Test ${{ matrix.taskfile }} taskfile
        run: |
          set -e
          TASKFILE=".taskfiles/${{ matrix.taskfile }}/Taskfile.yml"
          echo "Testing $TASKFILE..."
          
          # Validate syntax
          $TASK_BIN --taskfile "$TASKFILE" --dry || {
            echo "Error: Syntax validation failed for $TASKFILE"
            exit 1
          }
          
          # List available tasks
          echo "Available tasks in $TASKFILE:"
          $TASK_BIN --taskfile "$TASKFILE" --list
          
          # Test each task with --dry
          TASKS=$($TASK_BIN --taskfile "$TASKFILE" --list | grep -v "Available tasks" | grep "^* " | cut -d' ' -f2 | cut -d':' -f1 | sort -u)
          for task in $TASKS; do
            echo "Testing task: $task"
            if ! $TASK_BIN --taskfile "$TASKFILE" "$task" --dry; then
              echo "Error: Task '$task' failed dry run in $TASKFILE"
              exit 1
            fi
          done
