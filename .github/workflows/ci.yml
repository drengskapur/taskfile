name: Continuous Integration

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_call:
    inputs:
      taskfile:
        description: 'Specific taskfile to test (without path or extension)'
        required: false
        type: string

jobs:
  test-all:
    name: Test All Taskfiles
    if: inputs.taskfile == ''
    runs-on: ubuntu-latest
    env:
      SHELL: /bin/bash
      SHELL_RC: ${{ github.workspace }}/.bashrc
      TASK_BIN: /root/.local/bin/task
    steps:
      - uses: actions/checkout@v4

      - name: Install Task
        uses: arduino/setup-task@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create shell config
        run: touch "$SHELL_RC"

      - name: Get taskfiles
        id: get-taskfiles
        run: |
          TASKFILES=$(ls -1 .taskfiles | jq -R -s -c 'split("\n")[:-1]')
          echo "list=$TASKFILES" >> $GITHUB_OUTPUT

      - name: Test all taskfiles
        run: |
          set -e
          TASKFILES='${{ steps.get-taskfiles.outputs.list }}'
          echo "Testing all taskfiles: $TASKFILES"
          
          for taskfile in $(echo "$TASKFILES" | jq -r '.[]'); do
            TASKFILE_PATH=".taskfiles/$taskfile/Taskfile.yml"
            echo "Testing $TASKFILE_PATH..."
            
            # Validate syntax
            $TASK_BIN --taskfile "$TASKFILE_PATH" --dry || {
              echo "Error: Syntax validation failed for $TASKFILE_PATH"
              exit 1
            }
            
            # List available tasks
            echo "Available tasks in $TASKFILE_PATH:"
            $TASK_BIN --taskfile "$TASKFILE_PATH" --list
            
            # Test each task
            TASKS=$($TASK_BIN --taskfile "$TASKFILE_PATH" --list | grep -v "Available tasks" | grep "^* " | cut -d' ' -f2 | cut -d':' -f1 | sort -u)
            for task in $TASKS; do
              echo "Testing task: $task (dry run)"
              if ! $TASK_BIN --taskfile "$TASKFILE_PATH" "$task" --dry; then
                echo "Error: Task '$task' failed dry run in $TASKFILE_PATH"
                exit 1
              fi
              
              echo "Testing task: $task (execution)"
              if ! sudo -E $TASK_BIN --taskfile "$TASKFILE_PATH" "$task"; then
                echo "Error: Task '$task' failed execution in $TASKFILE_PATH"
                exit 1
              fi
            done
          done

  test-one:
    name: Test One Taskfile
    if: inputs.taskfile != ''
    runs-on: ubuntu-latest
    env:
      SHELL: /bin/bash
      SHELL_RC: ${{ github.workspace }}/.bashrc
      TASK_BIN: /root/.local/bin/task
      TASKFILE: ${{ inputs.taskfile }}
    steps:
      - uses: actions/checkout@v4

      - name: Install Task
        uses: arduino/setup-task@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create shell config
        run: touch "$SHELL_RC"

      - name: Test taskfile
        run: |
          set -e
          if [ -z "$TASKFILE" ]; then
            echo "Error: No taskfile specified"
            exit 1
          fi
          
          TASKFILE_PATH=".taskfiles/$TASKFILE/Taskfile.yml"
          if [ ! -f "$TASKFILE_PATH" ]; then
            echo "Error: Taskfile $TASKFILE_PATH does not exist"
            exit 1
          fi
          
          echo "Testing $TASKFILE_PATH..."
          
          # Validate syntax
          $TASK_BIN --taskfile "$TASKFILE_PATH" --dry || {
            echo "Error: Syntax validation failed for $TASKFILE_PATH"
            exit 1
          }
          
          # List available tasks
          echo "Available tasks in $TASKFILE_PATH:"
          $TASK_BIN --taskfile "$TASKFILE_PATH" --list
          
          # Test each task
          TASKS=$($TASK_BIN --taskfile "$TASKFILE_PATH" --list | grep -v "Available tasks" | grep "^* " | cut -d' ' -f2 | cut -d':' -f1 | sort -u)
          for task in $TASKS; do
            echo "Testing task: $task (dry run)"
            if ! $TASK_BIN --taskfile "$TASKFILE_PATH" "$task" --dry; then
              echo "Error: Task '$task' failed dry run in $TASKFILE_PATH"
              exit 1
            fi
            
            echo "Testing task: $task (execution)"
            if ! sudo -E $TASK_BIN --taskfile "$TASKFILE_PATH" "$task"; then
              echo "Error: Task '$task' failed execution in $TASKFILE_PATH"
              exit 1
            fi
          done
