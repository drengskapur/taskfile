# yaml-language-server: $schema=https://taskfile.dev/schema.json
---
version: "3"

set: [pipefail]
shopt: [globstar]

includes:
  act: .taskfiles/act
  aws: .taskfiles/aws
  bun: .taskfiles/bun
  digitalocean: .taskfiles/digitalocean
  direnv: .taskfiles/direnv
  docker: .taskfiles/docker
  fnm: .taskfiles/fnm
  hadolint: .taskfiles/hadolint
  helm: .taskfiles/helm
  jq: .taskfiles/jq
  k3s: .taskfiles/k3s
  mix: .taskfiles/mix
  node: .taskfiles/node
  pnpm: .taskfiles/pnpm
  python3: .taskfiles/python3
  rclone: .taskfiles/rclone
  terraform: .taskfiles/terraform
  uv: .taskfiles/uv

vars:
  TIMESTAMP:
    sh: date +%Y%m%d_%H%M%S
  LOG_DIR: .logs
  PID_DIR: .pid
  FAIL_FAST: '{{default "false" .FAIL_FAST}}'

tasks:
  default:
    desc: Show available tasks
    cmds:
      - task -l

  noop:
    internal: true
    cmd: noop() { :; }

  test:
    desc: Run all taskfile tests in container
    cmds:
      - |
        docker build -t taskfile-test-base - <<'EOF'
        FROM ubuntu:latest
        ENV DEBIAN_FRONTEND=noninteractive
        ENV SHELL=/bin/bash
        RUN apt-get update && apt-get install -y curl git sudo
        RUN curl -sL https://taskfile.dev/install.sh | sh && mv ./bin/task /usr/local/bin/
        EOF
      - |
        for dir in .taskfiles/*; do
          if [ -f "$dir/Taskfile.yml" ]; then
            name=$(basename "$dir")
            echo "Testing $name..."
            docker run --rm -v $(pwd):/workspace -w /workspace taskfile-test-base task $name:install
          fi
        done

  test:*:
    desc: Test a specific taskfile in container
    vars:
      TASKFILE: '{{index .MATCH 0}}'
    cmds:
      - |
        docker build -t taskfile-test-base - <<'EOF'
        FROM ubuntu:latest
        ENV DEBIAN_FRONTEND=noninteractive
        ENV SHELL=/bin/bash
        RUN apt-get update && apt-get install -y curl git sudo
        RUN curl -sL https://taskfile.dev/install.sh | sh && mv ./bin/task /usr/local/bin/
        EOF
      - echo "Testing {{.TASKFILE}}..."
      - docker run --rm -v $(pwd):/workspace -w /workspace taskfile-test-base task {{.TASKFILE}}:install

  test:status:
    desc: Check status of running tests
    cmds:
      - docker ps | grep taskfile-test

  _install:act:
    desc: Install act
    internal: true
    run: once
    status:
      - command -v act >/dev/null 2>&1
    cmds:
      - curl -sLO "https://github.com/nektos/act/releases/download/v0.2.74/act_Linux_x86_64.tar.gz"
      - tar xf act_Linux_x86_64.tar.gz
      - sudo mv act /usr/local/bin/
      - sudo chown root:root /usr/local/bin/act
      - sudo chmod 755 /usr/local/bin/act
      - act --version
      - echo "act version 0.2.74 installed"
      - rm -f act_Linux_x86_64.tar.gz

  _ensure_dirs:
    desc: "Ensure required directories exist"
    internal: true
    cmds:
      - mkdir -p {{.LOG_DIR}}
      - mkdir -p {{.PID_DIR}}

  _ensure_log_dir:
    desc: "Ensure log directory exists"
    internal: true
    cmds:
      - mkdir -p {{.LOG_DIR}}

  _install:expect:
    desc: "Install expect package for unbuffer command"
    internal: true
    run: once
    status:
      - command -v unbuffer >/dev/null 2>&1
    cmds:
      - sudo apt-get update
      - sudo apt-get install -y expect
      - which unbuffer

  _install:jq:
    desc: "Install jq"
    internal: true
    run: once
    status:
      - command -v jq >/dev/null 2>&1
    cmds:
      - sudo apt-get update
      - sudo apt-get install -y jq
      - jq --version
