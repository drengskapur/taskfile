# yaml-language-server: $schema=https://taskfile.dev/schema.json
---
version: "3"

vars:
  HOME:
    sh: echo $HOME
  COMMAND_PREFIX:
    sh: if [ "$(id -u)" != "0" ]; then echo "sudo"; else echo ""; fi

tasks:
  default:
    deps:
      - install

  install:
    desc: Install Erlang and elixir-update
    run: once
    status:
      - command -v elixir
      - command -v erl
    cmds:
      - defer: rm -f install.sh
      - |
        {{.COMMAND_PREFIX}} apt-get update
      - |
        {{.COMMAND_PREFIX}} apt-get install -y jq
      - curl -fsSLo install.sh https://raw.githubusercontent.com/elixir-lang/elixir-lang.github.com/main/install.sh
      - chmod +x install.sh
      # Run install and capture output
      - |
        INSTALL_OUTPUT=$(./install.sh elixir@latest otp@latest)
        OTP_VERSION=$(echo "$INSTALL_OUTPUT" | grep -o "otp/[0-9.]*" | head -1 | cut -d'/' -f2)
        ELIXIR_VERSION=$(echo "$INSTALL_OUTPUT" | grep -o "elixir/[0-9.].*-otp-[0-9]*" | head -1 | cut -d'/' -f2)

        # Copy Erlang installation
        {{.COMMAND_PREFIX}} mkdir -p /usr/local/lib/erlang
        {{.COMMAND_PREFIX}} cp -r {{.HOME}}/.elixir-install/installs/otp/${OTP_VERSION}/* /usr/local/lib/erlang/
        {{.COMMAND_PREFIX}} ln -sf /usr/local/lib/erlang/bin/erl /usr/local/bin/erl
        {{.COMMAND_PREFIX}} ln -sf /usr/local/lib/erlang/bin/erlc /usr/local/bin/erlc

        # Copy Elixir installation
        {{.COMMAND_PREFIX}} mkdir -p /usr/local/lib/elixir
        {{.COMMAND_PREFIX}} cp -r {{.HOME}}/.elixir-install/installs/elixir/${ELIXIR_VERSION}/* /usr/local/lib/elixir/
        {{.COMMAND_PREFIX}} ln -sf /usr/local/lib/elixir/bin/elixir /usr/local/bin/elixir
        {{.COMMAND_PREFIX}} ln -sf /usr/local/lib/elixir/bin/mix /usr/local/bin/mix
        {{.COMMAND_PREFIX}} ln -sf /usr/local/lib/elixir/bin/iex /usr/local/bin/iex
      # Verify installations
      - /usr/local/bin/erl -version
      - /usr/local/bin/elixir --version
