# yaml-language-server: $schema=https://taskfile.dev/schema.json
---
version: "3"

tasks:
  default:
    deps:
      - task: install

  install:
    desc: "Install Erlang and Elixir"
    preconditions:
      - sh: test "{{OS}}" = "linux" -o "{{OS}}" = "darwin"
        msg: "This task only supports Linux and macOS"
      - sh: test "{{ARCH}}" = "amd64" -o "{{ARCH}}" = "arm64"
        msg: "This task only supports amd64 and arm64 architectures"
    status:
      - command -v mix >/dev/null 2>&1
    vars:
      SUDO:
        sh: if [ "$(id -u)" = "0" ]; then echo ""; else echo "sudo -S"; fi
    cmds:
      - '{{.SUDO}} apt-get update'
      - '{{.SUDO}} apt-get install -y curl unzip'
      - |
        # Using latest stable versions
        ELIXIR_VERSION="1.16.1"
        OTP_VERSION="26.2.2"

        echo "Installing Elixir $ELIXIR_VERSION with OTP $OTP_VERSION"
        curl -fsSLO https://raw.githubusercontent.com/elixir-lang/elixir-lang.github.com/main/install.sh
        chmod +x install.sh
        ./install.sh "elixir@$ELIXIR_VERSION" "otp@$OTP_VERSION"
        rm -f install.sh
        chmod -R +x $HOME/.elixir-install/installs/elixir/*/bin/*
        chmod -R +x $HOME/.elixir-install/installs/otp/*/bin/*
        ELIXIR_PATH=$(ls -d $HOME/.elixir-install/installs/elixir/*/bin | sort -V | tail -n1)
        OTP_PATH=$(ls -d $HOME/.elixir-install/installs/otp/*/bin | sort -V | tail -n1)
        PATH=$OTP_PATH:$ELIXIR_PATH:$PATH mix local.hex --force
        PATH=$OTP_PATH:$ELIXIR_PATH:$PATH mix local.rebar --force

  verify:
    desc: "Verify mix installation"
    cmds:
      - |
        ELIXIR_PATH=$(ls -d $HOME/.elixir-install/installs/elixir/*/bin | sort -V | tail -n1)
        OTP_PATH=$(ls -d $HOME/.elixir-install/installs/otp/*/bin | sort -V | tail -n1)
        PATH=$OTP_PATH:$ELIXIR_PATH:$PATH mix --version

  test:
    cmds:
      - |
        .github/scripts/generate-workflows.sh mix
        mkdir -p logs
        act -j test --container-architecture linux/amd64 -W .github/workflows/test-mix.yml > logs/act.log 2>&1 & 
        sleep 2
        tail -f logs/act.log

  debug:
    cmds:
      - echo "ROOT_DIR={{.ROOT_DIR}}"
      - echo "TASKFILE_DIR={{.TASKFILE_DIR}}"

vars:
  METADATA: |
    {
      "description": "Elixir Mix Build Tool",
      "category": "Development",
      "homepage": "https://elixir-lang.org/",
      "platforms": ["linux", "darwin"],
      "architectures": ["amd64", "arm64"]
    }
  OS:
    sh: uname -s | tr '[:upper:]' '[:lower:]'
  ARCH:
    sh: |
      case "$(uname -m)" in
        x86_64) echo "amd64" ;;
        aarch64) echo "arm64" ;;
        *) echo "unsupported" ;;
      esac
  HOME:
    sh: echo $HOME
