# yaml-language-server: $schema=https://taskfile.dev/schema.json
---
version: "3"

tasks:
  default:
    deps:
      - task: install

  install:
    desc: "Install Go"
    vars:
      GO_VERSION:
        sh: |
          curl -sSL https://golang.org/dl/?mode=json | grep -o '"version": "go[0-9.]*"' | head -1 | cut -d'"' -f4 | cut -c3-
      DOWNLOAD_URL: https://golang.org/dl/go{{.GO_VERSION}}.linux-amd64.tar.gz
      INSTALL_DIR: "{{.HOME}}/.local/go"
      SHELL_RC: "{{.HOME}}/.bashrc"
      HOME:
        sh: echo $HOME
    run: once
    status:
      - test -x {{.INSTALL_DIR}}/bin/go
    cmds:
      - defer: rm -f go.tar.gz
      - curl -fsSL "{{.DOWNLOAD_URL}}" -o go.tar.gz
      - rm -rf {{.INSTALL_DIR}}
      - mkdir -p {{.INSTALL_DIR}}
      - tar -C {{.HOME}}/.local -xzf go.tar.gz
      - |
        if ! grep -q "export PATH={{.INSTALL_DIR}}/bin:\$PATH" {{.SHELL_RC}}; then
          echo 'export PATH={{.INSTALL_DIR}}/bin:$PATH' >> {{.SHELL_RC}}
        fi
      - export PATH={{.INSTALL_DIR}}/bin:$PATH
      - |
        {{.INSTALL_DIR}}/bin/go version

  setup:
    desc: "Setup Go environment"
    deps:
      - task: install
    vars:
      SHELL_RC: "{{.HOME}}/.bashrc"
      HOME:
        sh: echo $HOME
    run: once
    status:
      - test -d {{.HOME}}/go
    cmds:
      - mkdir -p {{.HOME}}/go/{bin,pkg,src}
      - |
        if ! grep -q "export GOPATH={{.HOME}}/go" {{.SHELL_RC}}; then
          echo 'export GOPATH={{.HOME}}/go' >> {{.SHELL_RC}}
          echo 'export PATH=$PATH:$GOPATH/bin' >> {{.SHELL_RC}}
        fi
      - export GOPATH={{.HOME}}/go
      - export PATH=$PATH:$GOPATH/bin
