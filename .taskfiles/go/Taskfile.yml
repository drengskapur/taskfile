# yaml-language-server: $schema=https://taskfile.dev/schema.json
---
version: "3"

vars:
  HOME:
    sh: echo $HOME
  GO_VERSION: "1.24.0"
  GO_DOWNLOAD_URL: https://go.dev/dl/go{{.GO_VERSION}}.linux-amd64.tar.gz
  INSTALL_DIR: "/usr/local"
  GOPATH:
    sh: echo $GOPATH || echo $HOME/go

tasks:
  default:
    deps:
      - task: install

  install:
    desc: "Install Go"
    run: once
    status:
      - test -x {{.INSTALL_DIR}}/go/bin/go
    cmds:
      - defer: rm -f go.tar.gz
      - test -x {{.INSTALL_DIR}}/go/bin/go || (
        curl -fsSL "{{.GO_DOWNLOAD_URL}}" -o go.tar.gz &&
        rm -rf {{.INSTALL_DIR}}/go &&
        tar -C {{.INSTALL_DIR}} -xzf go.tar.gz &&
        mkdir -p {{.GOPATH}}/bin &&
        mkdir -p {{.GOPATH}}/src &&
        mkdir -p {{.GOPATH}}/pkg &&
        rm -f go.tar.gz
        )
      - task: configure-path

  configure-path:
    desc: "Configure PATH for Go"
    internal: true
    vars:
      SHELL_RC: "{{.HOME}}/.profile"
    cmds:
      - |
        if ! grep -q "export PATH=\$PATH:{{.INSTALL_DIR}}/go/bin" {{.SHELL_RC}}; then
          echo 'export PATH=$PATH:{{.INSTALL_DIR}}/go/bin' >> {{.SHELL_RC}}
        fi
      - |
        if ! grep -q "export GOPATH={{.GOPATH}}" {{.SHELL_RC}}; then
          echo 'export GOPATH={{.GOPATH}}' >> {{.SHELL_RC}}
          echo 'export PATH=$PATH:$GOPATH/bin' >> {{.SHELL_RC}}
        fi
      # Run version check in a new shell that sources the profile
      - |
        {{.INSTALL_DIR}}/go/bin/go version

  test:
    desc: "Test Go installation"
    dir: "{{.TASKFILE_DIR}}"
    cmds:
      - |
        echo "Current dir: {{.TASKFILE_DIR}}"
        pwd
        ls -la
        act push -W test-go.yml --container-options "--privileged" --eventpath event.json
