# yaml-language-server: $schema=https://taskfile.dev/schema.json
---
version: "3"

vars:
  HOME:
    sh: echo $HOME
  COMMAND_PREFIX:
    sh: if [ "$(id -u)" != "0" ]; then echo "sudo"; else echo ""; fi
  LATEST_VERSION:
    sh: curl -s https://api.github.com/repos/Schniz/fnm/releases/latest | jq -r '.tag_name'

tasks:
  default:
    deps:
      - install

  install:
    desc: Install Node.js via fnm
    run: once
    status:
      - command -v node
    cmds:
      - defer: rm -f fnm.zip
      - |
        {{.COMMAND_PREFIX}} apt-get update
      - |
        {{.COMMAND_PREFIX}} apt-get install --no-install-recommends -y jq curl unzip
      # Download and install fnm
      - curl -fsSLo fnm.zip "https://github.com/Schniz/fnm/releases/download/{{.LATEST_VERSION}}/fnm-linux.zip"
      - unzip -o fnm.zip fnm
      - |
        {{.COMMAND_PREFIX}} chmod 755 fnm
      - |
        {{.COMMAND_PREFIX}} mv fnm /usr/local/bin/fnm
      - |
        {{.COMMAND_PREFIX}} chown root:root /usr/local/bin/fnm
      # Install latest Node.js LTS
      - |
        /usr/local/bin/fnm install --lts
      - |
        /usr/local/bin/fnm default lts-latest
      # Configure bash initialization
      - |
        if ! grep -q "fnm env" "{{.HOME}}/.bashrc"; then
          echo 'eval "$(fnm env --use-on-cd)"' >> "{{.HOME}}/.bashrc"
        fi
      # Generate bash completions
      - |
        {{.COMMAND_PREFIX}} mkdir -p /etc/bash_completion.d
      - fnm completions --shell bash | {{.COMMAND_PREFIX}} tee /etc/bash_completion.d/fnm >/dev/null
      # Setup environment
      - |
        eval "$(/usr/local/bin/fnm env)"
      - |
        NODE_PATH=$(readlink -f $(which node))
        $NODE_PATH --version
      - |
        NPM_PATH=$(readlink -f $(which npm))
        $NPM_PATH --version
