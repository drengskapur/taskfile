# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: "3"

tasks:
  setup:
    desc: "Preconfigure system and install K3s"
    deps:
      - preconfigure
    cmds:
      - task: install

  preconfigure:
    desc: "Preconfigure system for K3s installation"
    run: once
    deps:
      - update-system
    cmds:
      - task: install-dependencies

  update-system:
    desc: "Update package lists and upgrade existing packages"
    run: always
    cmds:
      - sudo apt-get update -y
      - sudo apt-get upgrade -y

  install-dependencies:
    desc: "Install required dependencies for K3s"
    run: once
    deps:
      - disable-ufw
    status:
      - command -v curl >/dev/null 2>&1
      - command -v ufw >/dev/null 2>&1
    cmds:
      - sudo apt-get install -y curl ufw
      - task: disable-ufw

  disable-ufw:
    desc: "Disable UFW firewall temporarily"
    run: once
    deps:
      - disable-swap
    cmds:
      - sudo ufw disable
      - echo "UFW has been disabled temporarily."
      - task: ensure-unique-hostname

  disable-swap:
    desc: "Disable swap on the system"
    run: once
    cmds:
      - sudo swapoff -a
      - sudo sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab
      - echo "Swap has been disabled."

  ensure-unique-hostname:
    desc: "Ensure each node has a unique hostname"
    run: once
    status:
      - command -v hostnamectl >/dev/null 2>&1
    vars:
      CURRENT_HOSTNAME:
        sh: hostname
      NEW_HOSTNAME: "k3s-node-{{ rand 1000 9999 }}"
    cmds:
      - |
        if [ "{{.CURRENT_HOSTNAME}}" != "k3s-node-{{ rand 1000 9999 }}" ]; then
          sudo hostnamectl set-hostname "{{.NEW_HOSTNAME}}"
          echo "Hostname changed from {{.CURRENT_HOSTNAME}} to {{.NEW_HOSTNAME}}"
        else
          echo "Hostname is already set to {{.CURRENT_HOSTNAME}}"
        fi
      - task configure-ufw

  configure-ufw:
    desc: "Configure UFW firewall for K3s"
    run: once
    cmds:
      # Kubernetes API Server
      - sudo ufw allow 6443/tcp
      - sudo ufw allow from 10.42.0.0/16 to any
      - sudo ufw allow from 10.43.0.0/16 to any
      # Flannel VXLAN
      - sudo ufw allow 8472/udp
      # Flannel WireGuard (IPv4)
      - sudo ufw allow 51820/udp
      # Flannel WireGuard (IPv6)
      - sudo ufw allow 51821/udp
      - sudo ufw enable
      - echo "UFW has been configured for K3s."

  install:
    desc: "Install Lightweight Kubernetes (K3s)"
    run: once
    deps:
      - disable-swap
    status:
      - command -v k3s >/dev/null 2>&1
    cmds:
      - curl -sfL https://get.k3s.io | sudo sh -
      - sudo systemctl enable k3s
      - sudo systemctl start k3s
      - sudo chmod 644 /etc/rancher/k3s/k3s.yaml
      - echo "K3s installed and started."
      - task: setup-kubectl

  setup-kubectl:
    desc: "Configure kubectl to access K3s cluster"
    run: once
    deps:
      - install
    cmds:
      - mkdir -p ~/.kube
      - sudo cp /etc/rancher/k3s/k3s.yaml ~/.kube/config
      - sudo chown $(id -u):$(id -g) ~/.kube/config
      - echo "KUBECONFIG set to ~/.kube/config"

  post-install:
    desc: "Post-installation steps for K3s"
    run: once
    deps:
      - install
    cmds:
      - echo "K3s installation completed successfully."
      - task: setup-kubectl

  uninstall:
    desc: "Uninstall K3s from the system"
    run: once
    cmds:
      - sudo /usr/local/bin/k3s-uninstall.sh
      - sudo rm -f ~/.kube/config
      - echo "K3s uninstalled and kubeconfig removed."
