# yaml-language-server: $schema=https://taskfile.dev/schema.json
---
version: "3"

silent: true

vars:
  HOME:
    sh: echo $HOME
  COMMAND_PREFIX:
    sh: if [ "$(id -u)" != "0" ]; then echo "sudo"; else echo ""; fi

tasks:
  default:
    deps:
      - install

  install:
    desc: Install K3s
    run: once
    status:
      - command -v k3s
    cmds:
      - curl -sfL https://get.k3s.io | {{.COMMAND_PREFIX}} sh -
      - |
        {{.COMMAND_PREFIX}} chmod 644 /etc/rancher/k3s/k3s.yaml
      - |
        mkdir -p {{.HOME}}/.kube
      - |
        {{.COMMAND_PREFIX}} cp /etc/rancher/k3s/k3s.yaml {{.HOME}}/.kube/config
      - |
        {{.COMMAND_PREFIX}} chown $(id -u):$(id -g) {{.HOME}}/.kube/config
      - chmod 600 {{.HOME}}/.kube/config
      - echo 'export KUBECONFIG={{.HOME}}/.kube/config' >> {{.HOME}}/.bashrc

  start:
    desc: "Start K3s service"
    cmds:
      - "{{.COMMAND_PREFIX}} systemctl start k3s"

  stop:
    desc: "Stop K3s service"
    cmds:
      - "{{.COMMAND_PREFIX}} systemctl stop k3s"

  status:
    desc: "Check K3s service status"
    cmds:
      - "{{.COMMAND_PREFIX}} systemctl status k3s"

  uninstall:
    desc: "Uninstall K3s"
    summary: Remove K3s and all its data
    cmds:
      - /usr/local/bin/k3s-uninstall.sh

  token:
    desc: "Get node token"
    summary: Display node token for joining agents
    cmds:
      - "{{.COMMAND_PREFIX}} cat /var/lib/rancher/k3s/server/node-token"

  logs:
    desc: "View K3s logs"
    cmds:
      - "{{.COMMAND_PREFIX}} journalctl -u k3s {{.CLI_ARGS}}"
